{"version":3,"sources":["/Users/jamesdavies/dev/react/react-kinetic-lib/src/components/discussions/DiscussionForm.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","of","DiscussionForm","parentName","isMDXComponent"],"mappings":"8fAYMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,SADR,SAGA,YAAC,IAAD,CAAOC,GAAIC,IAAgBF,QAAQ,UACnC,iBAAQ,CACN,GAAM,SADR,SAGA,4BAAW,0BAAYG,WAAW,KAAvB,kBAAX,sMAEA,iBAAQ,CACN,GAAM,gCADR,gCAGA,0MAEA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,cACb,WAAc,SACd,QAAU,IAHT,wCAML,iBAAQ,CACN,GAAM,WADR,WAGA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,cACb,WAAc,SACd,QAAU,IAHT,wnB,mMAiCTN,EAAWO,gBAAiB","file":"static/js/components-discussions-discussion-form.5198f5b6.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\nimport { Playground, Props } from 'docz';\nimport { DiscussionForm } from './DiscussionForm';\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1 {...{\n      \"id\": \"discussion-form\"\n    }}>{`Discussion Form`}</h1>\n    <h2 {...{\n      \"id\": \"props\"\n    }}>{`Props`}</h2>\n    <Props of={DiscussionForm} mdxType=\"Props\" />\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`DiscussionForm`}</inlineCode>{` component is used to render a form for editing discussions. It takes a few render props that allow you to\ncustomize the behavior of certain fields. Understanding how to use these is important.`}</p>\n    <h3 {...{\n      \"id\": \"owning-usera-and-teams-input\"\n    }}>{`Owning Usera and Teams Input`}</h3>\n    <p>{`The owning users and teams render functions are used to provide a input for these fields. Both render props take the same function signature.\nThe function receives three props:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`function({ id, onChange, value })\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"example\"\n    }}>{`Example`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`import { DiscussionForm } from 'react-kinetic-lib';\n\nconst PeopleSelect = props => <select />;\n\nconst handleSubmit = () => alert('Form submitted.');\n\n<DiscussionForm\n  onSubmit={handleSubmit}\n  renderOwningUsersInput={props => <PeopleSelect {...props} />}\n  renderOwningTeamsInput={props => <PeopleSelect {...props} />}\n  render={({ formElement, dirty, invalid, submit }) => (\n    <div>\n      {formElement}\n      <button\n        className=\"btn btn-primary\"\n        type=\"submit\"\n        disabled={!dirty || invalid}\n        onClick={submit}\n      >\n        Save\n      </button>\n    </div>\n  )}\n/>;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}