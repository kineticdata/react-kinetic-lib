{"version":3,"sources":["/Users/shayne/Work/react-kinetic-lib/src/components/GettingStarted.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"+YAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,iBAAQ,CACN,GAAM,mBADR,mBAGA,iBAAQ,CACN,GAAM,WADR,WAGA,4BAAW,+BAAGC,WAAW,KAAQ,CAC7B,KAAQ,iDADD,QAGX,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,qCAIL,4BAAW,+BAAGA,WAAW,KAAQ,CAC7B,KAAQ,uCADD,SAGX,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,kCAIL,iBAAQ,CACN,GAAM,SADR,SAGA,4BAAW,0BAAYA,WAAW,KAAvB,cAAX,2KAEA,iBAAQ,CACN,GAAM,iBADR,iBAGA,wFAAuE,0BAAYA,WAAW,KAAvB,cAAvE,cACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,44BAsCL,iBAAQ,CACN,GAAM,qBADR,qBAGA,mHACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,wBADZ,8nB,uLAuCTJ,EAAWK,gBAAiB","file":"static/js/components-getting-started.bce1670c.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"getting-started\"\n    }}>{`Getting Started`}</h1>\n    <h2 {...{\n      \"id\": \"install\"\n    }}>{`Install`}</h2>\n    <p>{`Via `}<a parentName=\"p\" {...{\n        \"href\": \"https://npmjs.com/package/@kineticdata/react\"\n      }}>{`npm`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`npm install @kineticdata/react\n`}</code></pre>\n    <p>{`Via `}<a parentName=\"p\" {...{\n        \"href\": \"http://yarn.fyi/@kineticdata/react\"\n      }}>{`Yarn`}</a></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`yarn add @kineticdata/react\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}>{`Usage`}</h2>\n    <p>{`The `}<inlineCode parentName=\"p\">{`KineticLib`}</inlineCode>{` Provider provides a global context to your site or applications connection to the Kinetic Platform and\nis required in order to render components within this library.`}</p>\n    <h3 {...{\n      \"id\": \"basic-example\"\n    }}>{`Basic Example`}</h3>\n    <p>{`Below is an example of how you would wrap your project with the `}<inlineCode parentName=\"p\">{`KineticLib`}</inlineCode>{` provider.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`/**\n * /src/App.js\n */\n\nimport React from 'react';\nimport { KineticLib } from '@kineticdata/react';\nimport { Router, Route, Switch } from 'react-router-dom';\nimport Space from './Space';\nimport Kapp from './Kapp'; // see the Kapp component defined in \\`API\\` example below\n\nexport const clientId =\n  process.env.NODE_ENV === 'development'\n    ? 'kinetic-bundle-dev'\n    : 'kinetic-bundle';\n\nconst App = () => (\n  <KineticLib clientId={clientId}>\n    {({ loggedIn, loggingIn, loginProps }) => (\n      <Router>\n        {loggingIn ? (\n          <LoginLoading />\n        ) : !loggedIn ? (\n          <LoginScreen {...loginProps} />\n        ) : (\n          <Switch>\n            <Route path=\"/\" component={Space} />\n            <Route path=\"/kapps/:kappSlug\" component={Kapp} />\n          </Switch>\n        )}\n      </Router>\n    )}\n  </KineticLib>\n);\n\nexport default App;\n`}</code></pre>\n    <h3 {...{\n      \"id\": \"example-api-usage\"\n    }}>{`Example API Usage`}</h3>\n    <p>{`All Service API's are exposed as functions to perform CRUD operations within the platform.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-javascript\"\n      }}>{`import React from 'react';\nimport { fetchKapp } from '@kineticdata/react';\n\nclass Kapp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { kapp: {} };\n  }\n\n  componentDidMount() {\n    const { kapp } = fetchKapp(this.props.kappSlug, {\n      include: 'details,forms',\n    });\n    this.setState({ kapp });\n  }\n\n  render() {\n    const { kapp } = this.state;\n    return (\n      <div>\n        <h1>{kapp.slug}</h1>\n        <ul>\n          {kapp.forms.map(form => (\n            <li>{form.name}</li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Kapp;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}