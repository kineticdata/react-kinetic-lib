{"version":3,"sources":["/Users/shayne/Work/react-kinetic-lib/src/components/common/ContentEditable.mdx"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"sZAWMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGX,IAFFC,EAEC,EAFDA,WACGC,EACF,8BACD,OAAO,YAACH,EAAD,iBAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,uBAAK,kCAAMC,WAAW,OAAU,CAC5B,UAAa,cACb,WAAc,SACd,QAAU,IAHT,urB,+LAqCTJ,EAAWK,gBAAiB","file":"static/js/components-common-content-editable.363947e3.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\",\n        \"metastring\": \"static\",\n        \"static\": true\n      }}>{`import { ContentEditable } from 'react-kinetic-lib';\n\ninitialState = {\n  htmlValue: 'default value',\n};\n\nconst updateOutput = (_e, value) => {\n  setState({ htmlValue: value });\n};\nconst handleHotKeys = e => {\n  if (e.nativeEvent.keyCode === 13 && !e.nativeEvent.shiftKey) {\n    alert(\\`Checking output: \\${state.htmlValue}\\`);\n    e.preventDefault();\n    setState({ htmlValue: 'default value' });\n  }\n};\n\n<div>\n  <p>Output: {state.htmlValue}</p>\n  <div style={{ border: '1px solid' }}>\n    <ContentEditable\n      contentEditable=\"plaintext-only\"\n      html={state.htmlValue}\n      onChange={updateOutput}\n      onKeyPress={handleHotKeys}\n    />\n  </div>\n</div>;\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}