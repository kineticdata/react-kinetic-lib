(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{"./src/components/form/Form.mdx":function(o,A,e){"use strict";e.r(A),e.d(A,"default",function(){return B});var n=e("./node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js"),i=e("./node_modules/docz-core/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),g=(e("./node_modules/react/index.js"),e("./node_modules/@mdx-js/react/dist/index.es.js")),r=e("./node_modules/docz/dist/index.esm.js"),s=e("./src/components/form/Form.js"),a=e("./src/components/form/Field.js"),t={},p="wrapper";function B(o){var A=o.components,e=Object(i.a)(o,["components"]);return Object(g.b)(p,Object.assign({},t,e,{components:A,mdxType:"MDXLayout"}),Object(g.b)("h1",{id:"form"},"Form"),Object(g.b)("p",null,"The ",Object(g.b)("inlineCode",{parentName:"p"},"<Form />")," component provides a generic way of rendering html forms. Below is\na definition of all of the properties that can be passed to the form\nand examples of wiring the form up in a project"),Object(g.b)("h2",{id:"props"},"Props"),Object(g.b)(r.d,{of:s.a,mdxType:"Props"}),Object(g.b)("h2",{id:"usage"},"Usage"),Object(g.b)("h3",{id:"simple-implementation-of-a-form-with-one-field"},"Simple implementation of a ",Object(g.b)("inlineCode",{parentName:"h3"},"Form")," with one field."),Object(g.b)(r.c,{__position:1,__code:"<Form\n  fields={[\n    {\n      name: 'Field1',\n      label: 'Field 1',\n      type: 'text',\n    },\n  ]}\n  onSubmit={props => alert('It Worked!')}\n>\n  {({ bindings, initialized, form }) => {\n    return initialized ? <div>{form}</div> : <p>Loading</p>\n  }}\n</Form>",__scope:{props:this?this.props:e,Playground:r.c,Props:r.d,Form:s.a,Field:a.a,typeToComponent:a.b},__codesandbox:"",mdxType:"Playground"},Object(g.b)(s.a,{fields:[{name:"Field1",label:"Field 1",type:"text"}],onSubmit:function(o){return alert("It Worked!")},mdxType:"Form"},function(o){o.bindings;var A=o.initialized,e=o.form;return A?Object(g.b)("div",null,e):Object(g.b)("p",null,"Loading")})),Object(g.b)("h2",{id:"customization"},"Customization"),Object(g.b)("p",null,"All fields defined on a form can have custom renderers. For instance, if the implementation\ncalls for all ",Object(g.b)("inlineCode",{parentName:"p"},"text")," fields to be implemented with a wrapper, or a UI framework (like ",Object(g.b)("a",Object.assign({parentName:"p"},{href:"https://reactstrap.github.io/"}),"reactstrap"),")\nyou can create a custom ",Object(g.b)("inlineCode",{parentName:"p"},"TextField")," component for all forms that have a ",Object(g.b)("inlineCode",{parentName:"p"},"text")," field.\n",Object(g.b)("a",Object.assign({parentName:"p"},{href:"#changing-a-field-type-component-globally"}),"Example of changing a field type component globally")),Object(g.b)("p",null,"You can also change a field type for a specific field on a form which overrides the global configuration.\n",Object(g.b)("a",Object.assign({parentName:"p"},{href:"#changing-a-field-type-component-for-a-single-form"}),"Example of changing a field type component for a single form")),Object(g.b)("p",null,"The library chooses which component to render for a given field in the following precidence:"),Object(g.b)("ol",null,Object(g.b)("li",{parentName:"ol"},"Local Config: If the forms field configuration provides a component to be used for rendering"),Object(g.b)("li",{parentName:"ol"},"Global Config: If the project provides a global component for a given field type"),Object(g.b)("li",{parentName:"ol"},"Default Config: If no local or global component are matched, the ",Object(g.b)("a",Object.assign({parentName:"li"},{href:"#default-fields"}),"default field")," component will be used.")),Object(g.b)("h3",{id:"field-props"},"Field Props"),Object(g.b)("p",null,"The following properties are available to the component responsible for rendering a field."),Object(g.b)(r.d,{of:a.a,mdxType:"Props"}),Object(g.b)("h3",{id:"supported-field-types"},"Supported Field Types"),Object(g.b)("p",null,"When configuring field type components ",Object(g.b)("a",Object.assign({parentName:"p"},{href:"#changing-a-field-type-component-globally"}),"Globally"),", the component needs to be named\nas follows for the field type component you are configuring:"),Object(g.b)("table",null,Object(g.b)("thead",null,Object(g.b)("tr",null,Object(g.b)("th",null,"Field Type"),Object(g.b)("th",null,"Component Name"))),Object(g.b)("tbody",null,Object.entries(a.b).filter(function(o){var A=Object(n.a)(o,2),e=A[0];A[1];return"__filemeta"!==e}).map(function(o){var A=Object(n.a)(o,2),e=A[0],i=A[1];return Object(g.b)("tr",{key:e},Object(g.b)("td",null,e),Object(g.b)("td",null,i.toString()))}))),Object(g.b)("h3",{id:"examples"},"Examples"),Object(g.b)("h4",{id:"changing-a-field-type-component-globally"},"Changing a field type component globally"),Object(g.b)("p",null,"The Password Field can be customized by creating a component in your project and then passing it to the KineticLib Provider in the root of your app."),Object(g.b)("pre",null,Object(g.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"/**\n *  myproject/src/components/fields/PasswordField.js\n */\nconst hasErrors = props => props.touched && props.errors.size > 0;\n\nexport const PasswordField = props => {\n  return props.visible ? (\n    <div className=\"form-group\">\n      {props.label && (\n        <label className=\"col-form-label\" htmlFor={props.id}>\n          {props.label}\n          {props.required && <abbr title=\"required\">*</abbr>}\n        </label>\n      )}\n\n      <input\n        className={`form-control${hasErrors(props) ? ' is-invalid' : ''}`}\n        type=\"password\"\n        id={props.id}\n        name={props.name}\n        value={props.value}\n        placeholder={props.placeholder}\n        onBlur={props.onBlur}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        disabled={!props.enabled}\n      />\n\n      {hasErrors(props) &&\n        props.errors.map(error => (\n          <span className=\"help-block text-danger\" key={error}>\n            {error}\n          </span>\n        ))}\n    </div>\n  ) : null;\n};\n\n/**\n *  myproject/src/App.js\n */\nimport { PasswordField } from './components/common/forms/PasswordField';\nimport { KineticLib } from '@kineticdata/react';\n\nexport const App = props => (\n  <KineticLib\n    components={{\n      fields: {\n        PasswordField,\n      },\n    }}\n  >\n    {'...yourAppHere'}\n  </KineticLib>\n);\n")),Object(g.b)("h4",{id:"changing-a-field-type-component-for-a-single-form"},"Changing a field type component for a single form"),Object(g.b)("p",null,"The Password Field can be customized by creating a component in your project and then passing it to the KineticLib Provider in the root of your app."),Object(g.b)("pre",null,Object(g.b)("code",Object.assign({parentName:"pre"},{className:"language-javascript"}),"/**\n *  myproject/src/components/MyForm.js\n */\nconst hasErrors = props => props.touched && props.errors.size > 0;\n\nconst PasswordField = props => {\n  return props.visible ? (\n    <div className=\"form-group\">\n      {props.label && (\n        <label className=\"col-form-label\" htmlFor={props.id}>\n          {props.label}\n          {props.required && <abbr title=\"required\">*</abbr>}\n        </label>\n      )}\n\n      <input\n        className={`form-control${hasErrors(props) ? ' is-invalid' : ''}`}\n        type=\"password\"\n        id={props.id}\n        name={props.name}\n        value={props.value}\n        placeholder={props.placeholder}\n        onBlur={props.onBlur}\n        onChange={props.onChange}\n        onFocus={props.onFocus}\n        disabled={!props.enabled}\n      />\n\n      {hasErrors(props) &&\n        props.errors.map(error => (\n          <span className=\"help-block text-danger\" key={error}>\n            {error}\n          </span>\n        ))}\n    </div>\n  ) : null;\n};\n\nexport const MyForm = () => (\n  <Form\n    fields={[\n      {\n        name: 'passwordField',\n        label: 'My Password Field',\n        type: 'password',\n      },\n    ]}\n    alterFields={{\n      passwordField: {\n        component: PasswordField,\n      },\n    }}\n  />\n);\n")))}B&&B===Object(B)&&Object.isExtensible(B)&&Object.defineProperty(B,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"src/components/form/Form.mdx"}}),B.isMDXComponent=!0}}]);
//# sourceMappingURL=components-form-form.7a170262d6df8b0a3f09.js.map